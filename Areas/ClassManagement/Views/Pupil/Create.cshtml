@model SchoolManager.Models.PupilModel
@{
    ViewBag.Title = "Create - Pupil";
    var tutors = (List<SchoolManager.Models.TutorModel>)ViewData["tutors"];
    var classrooms = (List<SchoolManager.Models.ClassroomModel>)ViewData["classrooms"];
    var levels = (List<SchoolManager.Models.LevelModel>)ViewData["levels"];
    var date = Model.BirthdayDate.ToString("yyyy-MM-dd");
}

<h2>New Pupil</h2>
@{Html.BeginForm("Create", "Pupil", FormMethod.Post, new { @class = "form-horizontal" });}
@Html.HiddenFor(p => p.Id)

<div class="form-group @if (!ViewData.ModelState.IsValidField("FirstName")) { @Html.Raw("has-error") ; }">
    @Html.LabelFor(t => t.FirstName, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-10 controls">
        <div class="row">
            <div class="col-sm-8">
                @Html.TextBoxFor(t => t.FirstName, new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(t => t.FirstName, null, new { @class = "help-block" })
            </div>
        </div>
    </div>
</div>


<div class="form-group @if (!ViewData.ModelState.IsValidField("LastName")) { @Html.Raw("has-error") ; }">
    @Html.LabelFor(t => t.LastName, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-10 controls">
        <div class="row">
            <div class="col-sm-8">
                @Html.TextBoxFor(t => t.LastName, new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(t => t.LastName, null, new { @class = "help-block" })
            </div>
        </div>
    </div>
</div>


<div class="form-group">
    <label class="col-sm-2 control-label">Sex</label>
    <div class="col-sm-10">
        <div class="radio">
            <label>
                @if (@Model.Sex == 1)
                {
                    <input checked="checked" type="radio" value="1" id="Sex" name="Sex" />
                }
                else
                {
                    <input type="radio" value="1" id="Sex" name="Sex" />
                }
                Male
            </label>
        </div>
        <div class="radio">
            <label>
                @if (@Model.Sex == 2)
                {
                    <input checked="checked" type="radio" value="2" id="Sex" name="Sex" />
                }
                else
                {
                    <input type="radio" value="1" id="Sex" name="Sex" />
                }
                Female
            </label>
        </div>
    </div>
</div>

<div class="form-group">
    <label class="col-sm-2 control-label">Birthday date</label>
    <div class="col-sm-10">
        <input type="date" class="form-control ui-datepicker" placeholder="Birthday date" id="BirthdayDate" name="BirthdayDate" value="@date" />
    </div>
</div>

<div class="form-group">
    <label class="col-sm-2 control-label">Level</label>
    <div class="col-sm-10">
        <select class="form-control" id="Level_Id" name="Level_Id">
            @foreach (var level in levels)
            {
                if (@Model.Level_Id.Equals(level.Id))
                {
                    <option selected="selected" value="@level.Id">@level.Title | @level.CycleName</option>
                }
                else
                {
                    <option value="@level.Id">@level.Title | @level.CycleName</option>
                }

            }
        </select>
    </div>
</div>
<div class="form-group">
    <label class="col-sm-2 control-label">Tutor</label>
    <div class="col-sm-10">
        <select class="form-control" id="Tutor_Id" name="Tutor_Id">
            @foreach (var tutor in tutors)
            {
                if (Model.Tutor_Id.Equals(tutor.Id))
                {
                    <option selected="selected" value="@tutor.Id">@tutor.FirstName @tutor.LastName</option>
                }
                else
                {
                    <option value="@tutor.Id">@tutor.FirstName @tutor.LastName</option>
                }
            }
        </select>
    </div>
</div>
<div class="form-group">
    <label class="col-sm-2 control-label">Classroom</label>
    <div class="col-sm-10">
        <select class="form-control" id="Classroom_Id" name="Classroom_Id">
            @foreach (var classroom in classrooms)
            {
                if (Model.Classroom_Id.Equals(classroom.Id))
                {
                    <option selected="selected" value="@classroom.Id">@classroom.Title | @classroom.Establishment_Name | @classroom.User_Name | @classroom.Year1.ToString()</option>
                }
                else
                {
                    <option value="@classroom.Id">@classroom.Title | @classroom.Establishment_Name | @classroom.User_Name | @classroom.Year1.ToString()</option>
                }
            }
        </select>
        </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</div>
@{Html.EndForm();}

<!-- Script pour support Firefox -->
<script src="http://cdn.jsdelivr.net/webshim/1.12.4/extras/modernizr-custom.js"></script>
<!-- polyfiller file to detect and load polyfills -->
<script src="http://cdn.jsdelivr.net/webshim/1.12.4/polyfiller.js"></script>
<script>
    webshims.setOptions('waitReady', false);
    webshims.setOptions('forms-ext', { types: 'date' });
    webshims.polyfill('forms forms-ext');
</script>
